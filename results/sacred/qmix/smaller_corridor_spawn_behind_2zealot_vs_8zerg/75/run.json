{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "C:\\Users\\jonas\\Documents\\epymarl\\epymarl\\src",
    "dependencies": [
      "munch==2.5.0",
      "numpy==1.23.1",
      "sacred==0.8.2",
      "torch==2.0.1"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [
      {
        "commit": "f12891d85d0e36e9261ea91ff25bdca74f3a8698",
        "dirty": true,
        "url": "https://github.com/JonasWild/epymarl.git"
      },
      {
        "commit": "f12891d85d0e36e9261ea91ff25bdca74f3a8698",
        "dirty": true,
        "url": "https://github.com/JonasWild/epymarl.git"
      },
      {
        "commit": "f12891d85d0e36e9261ea91ff25bdca74f3a8698",
        "dirty": true,
        "url": "https://github.com/JonasWild/epymarl.git"
      }
    ],
    "sources": [
      [
        "main.py",
        "_sources\\main_8d5ae448eaa6a4c209f5b3436cb8ca22.py"
      ],
      [
        "run.py",
        "_sources\\run_10ef91ac0724d4b44e79eaf00864b243.py"
      ],
      [
        "utils\\logging.py",
        "_sources\\logging_d35663a10912240ca48171b994bdf1bb.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"C:\\Users\\jonas\\.conda\\envs\\pymarl\\lib\\site-packages\\sacred\\config\\captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"C:\\Users\\jonas\\Documents\\epymarl\\epymarl\\src\\main.py\", line 53, in my_main\n    run(_run, config, _log)\n",
    "  File \"C:\\Users\\jonas\\Documents\\epymarl\\epymarl\\src\\run.py\", line 60, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"C:\\Users\\jonas\\Documents\\epymarl\\epymarl\\src\\run.py\", line 193, in run_sequential\n    episode_batch = runner.run(test_mode=False)\n",
    "  File \"C:\\Users\\jonas\\Documents\\epymarl\\epymarl\\src\\runners\\episode_runner.py\", line 133, in run\n    self._log(cur_returns, cur_stats, log_prefix, heatmaps=heatmaps)\n",
    "  File \"C:\\Users\\jonas\\Documents\\epymarl\\epymarl\\src\\runners\\episode_runner.py\", line 150, in _log\n    self.logger.log_heatmap(heatmap.name, heatmap.data)\n",
    "  File \"C:\\Users\\jonas\\Documents\\epymarl\\epymarl\\src\\utils\\logging.py\", line 49, in log_heatmap\n    plt.imshow(heatmap_data, cmap=cmap, interpolation='nearest')\n",
    "  File \"C:\\Users\\jonas\\.conda\\envs\\pymarl\\lib\\site-packages\\matplotlib\\pyplot.py\", line 2695, in imshow\n    __ret = gca().imshow(\n",
    "  File \"C:\\Users\\jonas\\.conda\\envs\\pymarl\\lib\\site-packages\\matplotlib\\__init__.py\", line 1472, in inner\n    return func(ax, *map(sanitize_sequence, args), **kwargs)\n",
    "  File \"C:\\Users\\jonas\\.conda\\envs\\pymarl\\lib\\site-packages\\matplotlib\\axes\\_axes.py\", line 5665, in imshow\n    im.set_data(X)\n",
    "  File \"C:\\Users\\jonas\\.conda\\envs\\pymarl\\lib\\site-packages\\matplotlib\\image.py\", line 701, in set_data\n    raise TypeError(\"Image data of dtype {} cannot be converted to \"\n",
    "TypeError: Image data of dtype object cannot be converted to float\n"
  ],
  "heartbeat": "2023-06-29T10:37:37.771425",
  "host": {
    "ENV": {},
    "cpu": "Unknown",
    "gpus": {
      "driver_version": "531.79",
      "gpus": [
        {
          "model": "NVIDIA GeForce GTX 960",
          "persistence_mode": false,
          "total_memory": 2048
        }
      ]
    },
    "hostname": "DESKTOP-1HDPUO6",
    "os": [
      "Windows",
      "Windows-10-10.0.22621-SP0"
    ],
    "python_version": "3.8.16"
  },
  "meta": {
    "command": "my_main",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [],
      "help": false,
      "with": false
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2023-06-29T10:36:16.878513",
  "status": "FAILED",
  "stop_time": "2023-06-29T10:37:37.779932"
}